name: Deploy Home to VPS 

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - home/**

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm 
        uses: pnpm/action-setup@v4 
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install 

      - name: Lint codes
        run: pnpm run format && pnpm run lint

  build-and-push-image:
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: ./dockerfiles/Dockerfile.home
          tags: ghcr.io/mfdebby/mfdebby/home:${{ vars.HOME_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create env file
        run: |
          echo "DOCS_VERSION=${{ vars.DOCS_VERSION }}" >> .env
          echo "HOME_VERSION=${{ vars.HOME_VERSION }}" >> .env
          echo "DOMAIN=mfdebby.dev" >> .env
          echo "DOMAIN_EMAIL=${{ secrets.DOMAIN_EMAIL }}" >> .env

      - name: Docker stack deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: 'mfdebby'
          file: 'docker-stack.yml'
          host: ${{ secrets.HOST }}
          user: ${{ secrets.DEPLOY_USER }}
          ssh_key: ${{ secrets.DEPLOY_SSH_KEY }}
          env_file: '.env'
